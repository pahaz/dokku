#!/usr/bin/env bash
set -eo pipefail; [[ $TRACE ]] && set -x

[[ $WFLOW_NAME ]] || WFLOW_NAME=wflow
[[ $WFLOW_USER ]] || WFLOW_USER=wflow
[[ $WFLOW_ROOT ]] || WFLOW_ROOT=/home/${WFLOW_NAME}
[[ $WFLOW_PLUGINS ]] || WFLOW_PLUGINS=/var/lib/${WFLOW_NAME}/plugins
[[ $WFLOW_SHELL ]] || WFLOW_SHELL=/usr/local/bin/${WFLOW_NAME}

# latest stable NGINX 1.4.x with websocket support
add-apt-repository -y ppa:nginx/stable
apt-get update
apt-get install -y nginx dnsutils

if ! grep -q ${WFLOW_USER}-nginx-reload "/etc/sudoers"; then
  touch /etc/sudoers.tmp
  BACK_TIME=$(date +"%Y-%m-%d-%H-%M-%S")
  cp /etc/sudoers /tmp/sudoers.$BACK_TIME
  echo "%${WFLOW_USER} ALL=(ALL)NOPASSWD:/etc/init.d/nginx reload # ${WFLOW_USER}-nginx-reload" >> /tmp/sudoers.$BACK_TIME
  EDITOR="cp /tmp/sudoers.$BACK_TIME" visudo
  #rm /tmp/sudoers.new
fi

# if ${WFLOW_NAME}.conf has not been created, create it
if [[ ! -f /etc/nginx/conf.d/${WFLOW_NAME}.conf ]]; then
  cat<<EOF > /etc/nginx/conf.d/${WFLOW_NAME}.conf
include $WFLOW_ROOT/*/nginx.conf;

ssl_session_cache shared:SSL:20m;
ssl_session_timeout 10m;

ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
ssl_prefer_server_ciphers on;

#ssl_certificate $WFLOW_ROOT/tls/server.crt;
#ssl_certificate_key $WFLOW_ROOT/tls/server.key;
EOF
fi
sed -i 's/# server_names_hash_bucket_size/server_names_hash_bucket_size/' /etc/nginx/nginx.conf

if [[ ! -f  "$WFLOW_ROOT/NGINX-VHOST" ]]; then
  [[ $(dig +short $(< "$WFLOW_ROOT/HOSTNAME")) ]] && cp "$WFLOW_ROOT/HOSTNAME" "$WFLOW_ROOT/NGINX-VHOST"
fi

service nginx start
